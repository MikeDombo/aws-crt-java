import java.util.regex.Pattern

apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'


preBuild.doFirst {
    println('Installing libcrypto prebuilt binaries')
    def exec = (project.file('fetch_libcrypto.sh').absolutePath).execute()
    exec.waitForProcessOutput(System.out, System.err)
}

Properties getGitTag() {
    def gitTag = "git describe --tags".execute().text.trim()
    println("gitTag=${gitTag}")
    def version = new Properties()
    def versionPattern = Pattern.compile('v(\\d+).(\\d+).(\\d+)(-(.+))?')
    def matcher = versionPattern.matcher(gitTag)
    if (matcher.matches()) {
        version['major'] = matcher.group(1)
        version['minor'] = matcher.group(2)
        version['patch'] = matcher.group(3)
        if (matcher.groupCount() > 4) {
            version['tag'] = matcher.group(5)
        }
    }
    println("VERSION=${version}")
    return version
}

ext {
    gitVersionName = {
        def version = getGitTag()
        def name = "${version['major']}.${version['minor']}.${version['patch']}"
        println("versionName=${name}")
        return name
    }
    gitVersionCode = {
        def version = getGitTag()
        try {
            def major = version['major'] as int
            def minor = version['minor'] as int
            def patch = version['patch'] as int
            println("major=${major}, minor=${minor}, patch=${patch}")
            return (major * 1000) + (minor * 100) + patch
        } catch (Exception ex) {
            return 0
        }
    }
    gitVersionTag = {
        def version = getGitTag()
        return version['tag'] != '' ? '-' + version['tag'] : version['tag']
    }
}

android {
    compileSdkVersion 29
    buildToolsVersion "29.0.3"
    ndkVersion "21.0.6113669"

    useLibrary 'android.test.runner'
    useLibrary 'android.test.base'
    useLibrary 'android.test.mock'

    defaultConfig {
        minSdkVersion 26
        targetSdkVersion 29
        versionCode = gitVersionCode()
        versionName = gitVersionName()

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        consumerProguardFiles 'consumer-rules.pro'

        ndk {
            abiFilters "armeabi-v7a", "arm64-v8a", "x86", "x86_64"
        }

        externalNativeBuild {
            cmake {
                arguments "-DBUILD_DEPS=ON"
            }
        }
    }

    sourceSets {
        main {
            java.srcDir '../../src/main/java'
            java.srcDir 'src/main/java'
        }
        androidTest {
            setRoot '../../src/test'
            java.srcDir '../../src/test/java'
            java.srcDir 'src/androidTest/java'
            assets.srcDir 'src/androidTest/res'
        }
    }

    buildTypes {
        debug {
            versionNameSuffix = gitVersionTag()
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            versionNameSuffix ""
        }
    }

    externalNativeBuild {
        cmake {
            path "../../CMakeLists.txt"
            buildStagingDirectory "../../target/cmake-build"
            version "3.10.2"
        }
    }

    compileOptions {
        sourceCompatibility = 1.8
        targetCompatibility = 1.8
    }
}

build.dependsOn preBuild

dependencies {
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.core:core-ktx:1.2.0'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test:runner:1.2.0'
    androidTestImplementation 'androidx.test:monitor:1.2.0@aar'
    androidTestImplementation 'androidx.test:rules:1.2.0'
}
